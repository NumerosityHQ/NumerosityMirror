
package org.numerosity.mathlib;

import java.util.Map;
import java.util.Random;
import java.util.Scanner;

import org.numerosity.mathlib.Subsystems.DataPlotter;
import org.numerosity.mathlib.Subsystems.DatabaseHandler;
import org.numerosity.mathlib.Subsystems.FirestoneClient;
import org.numerosity.mathlib.Subsystems.LocalDatabaseHandler;
import org.numerosity.mathlib.Subsystems.ResponseHandler;
import org.numerosity.mathlib.Subsystems.ResponseHandler.ResponseResult;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class Main {

    private static final Logger logger = LoggerFactory.getLogger(Main.class);

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();

        try {
            String firebaseUrl = "your_firebase_url";  // Replace with your Firebase URL
            String serviceAccountPath = "path/to/your/serviceAccountKey.json"; // Replace with your path
            String projectId = "your_project_id";  // Replace with your project ID

            Library lib = new Library(firebaseUrl, serviceAccountPath, projectId);
            LocalDatabaseHandler localDbHandler = new LocalDatabaseHandler();
            DatabaseHandler dbHandler = new DatabaseHandler(FirestoneClient.getFirestore());
            DataPlotter dataPlotter = new DataPlotter();

            // Get the ResponseHandler
            ResponseHandler responseHandler = new ResponseHandler(localDbHandler, dbHandler, dataPlotter);

            // Example user and question
            String userId = "user123";
            String questionId = "q" + (random.nextInt(3) + 1);  // Randomly select q1, q2, or q3
            String difficulty = "easy";
            String questionTag = "math";

            // Load the question
            String questionText = lib.getQuestionLoader().loadAsText("questions", questionId);

            // Present the question to the user
            System.out.println("Question: " + questionText);
            System.out.print("Your answer: ");
            String userAnswer = scanner.nextLine();

            // Handle the response and get the results
            ResponseResult result = responseHandler.handleResponse(userId, questionId, userAnswer);
            boolean isCorrect = result.isCorrect();
            long timeTakenMillis = result.getTimeTakenMillis();

            // Log results
            System.out.println("Correct answer? " + isCorrect);
            System.out.println("Time taken: " + timeTakenMillis + "ms");

            // Plot the data
            responseHandler.plotData(userId, questionId, isCorrect, timeTakenMillis, difficulty, questionTag);

        } catch (Exception e) {
            logger.error("Error in main method: {}", e.getMessage(), e);
        } finally {
            scanner.close();
        }
    }
}
